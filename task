#!/usr/bin/env bash

# Display and modify todo/task lists stored in local text files.

data_file_todo="$TASK_DATA_DIR/data_todo"
data_file_daily="$TASK_DATA_DIR/data_daily"
data_file_monthly="$TASK_DATA_DIR/data_monthly"
template_daily="$TASK_DATA_DIR/template_daily"
template_monthly="$TASK_DATA_DIR/template_monthly"

# Legend:
# a - all               t - todo
# i - initialize        d - daily
# n - new               m - monthly
# e - edit

case $1 in
	"e")
		# task e
		# Edit data files
		(cd $TASK_DATA_DIR && nvim -c FZF)
		;;
	"t")
		# task t [pattern]
		# Show incomplete todo tasks.  Mark complete if pattern is provided.
		if [[ -n $2 ]]; then
			sed -i "/$2/ s/\[ \]/[X]/" $data_file_todo
		else
			grep "\[ \]" $data_file_todo | sort
		fi
		;;
	"tn")
		# task tn
		# Create new todo task interactively
		;;
	"m")
		# task m [pattern]
		# Show current MONTHLY tasks.  Mark complete if pattern is provided.
		if [[ -n $2 ]]; then
			month=$(date +%Y-%m)
			sed -i "/$month.*$2/ s/\[ \]/[X]/" $data_file_monthly
			sed -i "/$month.*$2/ s/xx    /$(date +'%d %a')/" $data_file_monthly
		else
			grep $(date +%Y-%m) $data_file_monthly
		fi
		;;
	"ma")
		# task ma
		# Show all MONTHLY tasks
		cat $data_file_monthly
		;;
	"mi")
		# task mi
		# Create new MONTHLY tasks from template
		while IFS= read -r line; do
			echo "$(date +'%Y-%m-xx    ') [ ] $line" >> $data_file_monthly
		done < $template_monthly
		;;
	"d")
		# task d [pattern [comment]]
		# Show current DAILY tasks.  Mark complete and add comment, if provided.
		if [[ -n $2 ]]; then
			description="${@:3}"
			date="$(date +%Y-%m-%d)"
			sed -i "/${date}.*$2/ s/\[ \]/[X]/" $data_file_daily
			sed -i "/${date}.*$2/ s/$/${description}/" $data_file_daily
		else
			grep $(date +%Y-%m-%d) $data_file_daily
		fi
		;;
	"da")
		# task da
		# Show all DAILY tasks
		cat $data_file_daily
		;;
	"di")
		# task di
		# Create new DAILY tasks from template
		while IFS= read -r line; do
			echo "$(date +'%Y-%m-%d %a') [ ] ${line}: " >> $data_file_daily
		done < $template_daily
		;;
	"")
		# task
		# Show all current incomplete todo, DAILY, and MONTHLY tasks
		clear
		todo=$(grep "\[ ]" $data_file_todo)
		if [[ $todo ]]; then
			echo -e "\e[1;0m=== \e[1;33mTODO \e[1;0m===\e[0m\n"
			echo "$todo" | sort
		fi
		daily=$(grep "$(date -I).*\[ \]" $data_file_daily)
		if [[ $daily ]]; then
			echo -e "\n\e[1;0m=== \e[1;34mDAILY \e[1;0m===\e[0m\n"
			echo "$daily"
		fi
		monthly=$(grep "$(date +%Y-%m).*\[ \]" $data_file_monthly)
		if [[ $monthly ]]; then
			echo -e "\n\e[1;0m=== \e[1;35mMONTHLY \e[1;0m===\e[0m\n"
			echo "$monthly"
		fi
		echo
		;;
	"a")
		# task a
		# Show all current todo, DAILY, and MONTHLY tasks
		clear
		echo -e "\e[1;0m=== \e[1;33mTODO \e[1;0m===\e[0m\n"
		grep "\[ ]" $data_file_todo | sort
		echo -e "\n\e[1;0m=== \e[1;34mDAILY \e[1;0m===\e[0m\n"
		grep $(date -I) $data_file_daily
		echo -e "\n\e[1;0m=== \e[1;35mMONTHLY \e[1;0m===\e[0m\n"
		grep $(date +%Y-%m) $data_file_monthly
		echo
		;;
esac
