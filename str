#!/usr/bin/env bash

# Display workout log sheets for data stored in local text files.

data_file="$STR_DATA_DIR/main.tsv"
tmp_file="$STR_DATA_DIR/tmp.tsv"

# Edit data files
[[ $1 == "e" ]] && (cd $STR_DATA_DIR && nvim -c FZF) && exit

export GUM_INPUT_PLACEHOLDER=""
export GUM_FILTER_PLACEHOLDER=""

function new_entry()
{
	echo "" > $tmp_file
	date=$(gum input --header="Date" --value=$(date -I))
	echo -n -e "${date}\theader\t" >> $tmp_file
	description=$(gum input --header="Description")
	echo -n -e "${description}\t" >> $tmp_file
	location=$(gum input --header="Location")
	echo $location >> $tmp_file
	while true; do
		exercise=$(gum input --header="Exercise")
		[[ $exercise ]] || break
		wgt_type=$(gum input --header="Weight type")
		echo -n -e "${date}\t${exercise}\t${wgt_type}\t" >> $tmp_file
		set_number=1
		lbs=""
		while true; do
			reps=$(gum input --header="${exercise} set ${set_number} reps" --value=$reps)
			[[ $reps ]] || break
			[[ $wgt_type != "Bodyweight" ]] \
				&& lbs=$(gum input --header="${exercise} set ${set_number} lbs" --value=$lbs)
			echo -n -e "${reps}\t${lbs}\t" >> $tmp_file
			((set_number++))
		done
		echo "" >> $tmp_file
	done
	notes=$(gum input --header="Notes")
	[[ $notes ]] && echo -e "${date}\tnotes\t${notes}" >> $tmp_file

	cat $tmp_file >> $data_file
}

function print_report()
{
	width=61

	# Header: description, location, date
	awk -v date=$selected_date -v weekday=$weekday -f str_header.awk $data_file

	# Exercise list
	awk -v date=$selected_date -f str_main.awk $data_file

	# Footer: notes
	grep -P "${selected_date}\tnotes" $data_file \
		| cut --fields=3 \
		| fmt --width=$width \
		| awk -f str_notes.awk
}

case $1 in
	"n")
		new_entry
		;;
	"t")
		# print report for today
		selected_date=$(date -I)
		print_report
		;;
	"")
		# select from list of dates
		selected_date=$(awk -F "\t" '/^[[:digit:]]/ && $2 == "header" {printf "%s %s\n", $1, $3}' $data_file \
			| sort --unique --reverse \
			| gum filter --no-fuzzy \
			| cut --delimiter=" " --fields=1)
		if [[ $selected_date ]]; then
			weekday=$(date --date=$selected_date +%A)
			print_report
		fi
		;;
	*)
		# print report for specified date
		selected_date=$1
		print_report
		;;
esac

rm -f $tmp_file
