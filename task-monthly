#!/usr/bin/env bash

data_file_monthly="$DATA_DIR/task/data_monthly"
template_monthly="$DATA_DIR/task/template_monthly"

case $1 in
	"a")
		# task-monthly a
		# Show all MONTHLY tasks
		cat "$data_file_monthly"
		;;
	"")
		# task-monthly
		# Show current MONTHLY tasks.  Create new MONTHLY tasks if none exist.
		date=$(printf "%(%Y-%m)T" -1)
		mapfile -t tasks < <(grep "$date" "$data_file_monthly")

		if [[ -z ${tasks[*]} ]]; then
			while IFS= read -r line; do
				printf "%(%Y-%m)T--- --- [ ] %s\n" -1 "$line" >> "$data_file_monthly"
			done < "$template_monthly"
			mapfile -t tasks < <(grep "$date" "$data_file_monthly")
		fi

		for task in "${tasks[@]}"; do
			echo "$task"
		done
		;;
	*)
		# task-monthly [pattern]
		# Mark complete task that matches pattern
		pattern=$1
		date=$(printf "%(%Y-%m)T" -1)

		sed -i "/${date}.*${pattern}/ s/\[ \]/[X]/" "$data_file_monthly"
		sed -i "/${date}.*${pattern}/ s/-- ---/$(printf "%(%d %a)T" -1)/" "$data_file_monthly"
		;;
esac
