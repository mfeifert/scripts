#!/usr/bin/env bash

# Print lists of show episodes from a local database
# and track which episodes have been watched.

# Environment variables:
# SHOWS_DB        - Path of sqlite database containing information on show episodes
# SHOWS_CSV       - Path of csv file used for creating main menu
# SHOWS_MEDIA_DIR - Path of base directory where media files are found

function main()
{
	PS3=$'\n'"> "

	# Get data from csv file
	while IFS=',' read -r table title show_media_dir; do
		tables+=("$table")
		titles+=("$title")
		show_media_dirs+=("$show_media_dir")
	done < "$SHOWS_CSV"

	# Show main menu
	while true; do
		echo
		select item in "${titles[@]}"; do
			index=$((REPLY - 1))
			table=${tables[$index]}
			title=$item
			show_media_dir=${show_media_dirs[$index]}
			break
		done
		actions
	done
}

function get_episode()
{
	case $1 in
		"next")
			episode_num=$(sqlite3 \
				"$SHOWS_DB" "SELECT NumOverall FROM $table WHERE WatchedDate IS NULL ORDER BY NumOverall LIMIT 1")
			;;
		"random")
			episode_num=$(sqlite3 \
				"$SHOWS_DB" "SELECT NumOverall FROM $table WHERE WatchedDate IS NULL ORDER BY random() LIMIT 1")
			;;
		*)
			episode_num=$(sqlite3 \
				"$SHOWS_DB" "SELECT NumOverall FROM $table WHERE NumOverall == $1")
			;;
	esac

	episode_title=$(sqlite3 "$SHOWS_DB" "SELECT Title FROM $table WHERE NumOverall == $episode_num")
	sqlite3 "$SHOWS_DB" -box "SELECT * FROM $table WHERE NumOverall == $episode_num"

	echo
	[[ -z $show_media_dir ]] || echo "p. Play episode"
	[[ -z $episode_num ]] || echo "w. Mark episode $episode_num as watched"
}

function actions()
{
	episode_num=""
	echo
	echo "1. List episodes"
	echo "2. Next episode"
	echo "3. Random episode"
	echo "4. Select episode"
	[[ $table == "xfiles" ]] && echo "a. List mythology arc"
	echo "m. Main menu"

	while true; do
		echo
		read -rp "${title}> " action
		echo
		case $action in
			1)
				sqlite3 "$SHOWS_DB" -box "SELECT * from $table"
				;;
			2)
				get_episode "next"
				;;
			3)
				get_episode "random"
				;;
			4)
				read -rp "Episode: " episode
				get_episode "$episode"
				;;
			a)
				sqlite3 "$SHOWS_DB" -box "SELECT * FROM $table WHERE Mytharc IS NOT NULL"
				;;
			p)
				episode_title_formatted=${episode_title/\W//}
				xdg-open "$(find "$SHOWS_MEDIA_DIR/$show_media_dir" -type f | fzf -i -1 -f "$episode_title_formatted" | head -n 1)"
				;;
			w)
				sqlite3 "$SHOWS_DB" "UPDATE $table SET WatchedDate = date('now', 'localtime') WHERE NumOverall = $episode_num"
				continue
				;;
			m)
				break
				;;
		esac
	done
}

main
