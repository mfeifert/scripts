#!/usr/bin/env bash

# Print lists of show episodes from a local database
# and track which episodes have been watched.

# Environment variables:
# SHOWS_DB        - Path of sqlite database containing information on show episodes
# SHOWS_CSV       - Path of csv file used for creating main menu
# SHOWS_MEDIA_DIR - Path of base directory where media files are found

get_episode()
{
	declare -gi episode_num=$1

	case $episode_num in
		"next")
			episode_num=$(sqlite3 \
				"$SHOWS_DB" "SELECT NumOverall FROM $table WHERE WatchedDate IS NULL ORDER BY NumOverall LIMIT 1")
			;;
		"random")
			episode_num=$(sqlite3 \
				"$SHOWS_DB" "SELECT NumOverall FROM $table WHERE WatchedDate IS NULL ORDER BY random() LIMIT 1")
			;;
		*)
			episode_num=$(sqlite3 \
				"$SHOWS_DB" "SELECT NumOverall FROM $table WHERE NumOverall == $episode_num")
			;;
	esac

	if [[ -z $episode_num ]]; then
		echo "No unwatched episodes"
		return
	fi

	declare -g episode_title
	episode_title=$(sqlite3 "$SHOWS_DB" "SELECT Title FROM $table WHERE NumOverall == $episode_num")
	sqlite3 "$SHOWS_DB" -box "SELECT * FROM $table WHERE NumOverall == $episode_num"

	echo
	[[ $show_media_dir ]] && echo "p. Play episode"
	[[ $episode_num ]] && echo "w. Mark episode $episode_num as watched"
}

actions()
{
	echo
	echo "1) List episodes"
	echo "2) Next episode"
	echo "3) Random episode"
	echo "4) Select episode"
	[[ $table == "xfiles" ]] && echo "a) List mythology arc"
	echo "m) Main menu"
	echo

	while true; do
		local action
		read -rp "${title}> " action
		echo
		case $action in
			1)
				sqlite3 "$SHOWS_DB" -box "SELECT * from $table"
				echo
				;;
			2)
				get_episode "next"
				echo
				;;
			3)
				get_episode "random"
				echo
				;;
			4)
				declare -i episode
				read -rp "Episode: " episode
				get_episode "$episode"
				echo
				;;
			a)
				sqlite3 "$SHOWS_DB" -box "SELECT * FROM $table WHERE Mytharc IS NOT NULL"
				echo
				;;
			p)
				declare episode_filename
				episode_filename=$(find "$SHOWS_MEDIA_DIR/$show_media_dir" -type f 2> /dev/null \
					| fzf -i -1 -f "${episode_title//[![:word:]]/}" \
					| head -n 1)
				[[ $? != 0 ]] && echo -e "Media not found\n" && continue
				xdg-open "$episode_filename" 2> /dev/null
				;;
			w)
				sqlite3 "$SHOWS_DB" "UPDATE $table SET WatchedDate = date('now', 'localtime') WHERE NumOverall = $episode_num"
				;;
			m)
				break
				;;
		esac
	done
}

# Get data from csv file
while IFS=',' read -r table title show_media_dir; do
	declare -a tables+=("$table")
	declare -a titles+=("$title")
	declare -a show_media_dirs+=("$show_media_dir")
done < "$SHOWS_CSV"

set -o pipefail

# Main menu
echo
while true; do
	export COLUMNS=1
	PS3=$'\n'"> "
	declare item
	select item in "${titles[@]}"; do
		declare -i index
		index=$((REPLY - 1))
		declare table=${tables[$index]}
		declare title=$item
		declare show_media_dir=${show_media_dirs[$index]}
		break
	done
	actions
done
