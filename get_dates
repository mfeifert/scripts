#!/usr/bin/env bash

PS3="> "

first_day_of_month()
{
	date -d "$1" +"%Y-%m-01"
}

last_day_of_month()
{
	date -d "$(first_day_of_month "$1") +1month -1day" +%F
}

get_date()
{
	local date
	local reference_weekday
	local count=$(( number - 1 ))
	local -A weekdays=([sun]=0 [mon]=1 [tue]=2 [wed]=3 [thu]=4 [fri]=5 [sat]=6)
	local selected_weekday=${weekdays[$day_of_week]}

	# Set values depending upon choosing date relative to beginning or end of month
	if [[ $anchor == "bom" ]]; then

		date=$(first_day_of_month "$start_date")
		reference_weekday=$(date -d "$date" +%w)
		local op="+"
		local offset=$(((selected_weekday - reference_weekday + 7) % 7))

	elif [[ $anchor == "eom" ]]; then

		date=$(last_day_of_month "$start_date")
		reference_weekday=$(date -d "$date" +%w)
		local op="-"
		local offset=$(((reference_weekday - selected_weekday + 7) % 7))

	fi

	# Shift date to selected weekday
	if [[ $(date -d "$date" +%w) != "${weekdays[$day_of_week]}" ]]
	then
		date=$(date -d "$date ${op}${offset}days" +%F)
	fi

	# Shift date the selected number of weeks
	[[ $count -gt 0 ]] && date=$(date -d "$date ${op}${count}weeks" +%F)

	# Check if there are 5 of the selected weekday in the current month
	if [[ $number == 5 ]] && [[ $(date -d "$date" +%B) != "$month" ]]; then
		return 1
	fi

	date -d "$date" +"%F %a"
}

while getopts ":ds:e:i:k:c:" opt; do
	case $opt in
		s) start_date=$OPTARG ;;
		e) end_repeat=$OPTARG ;;
		i) ;;
		d) ;;
		k) 
			day_of_week=${OPTARG,,}
			day_of_week=${day_of_week:0:3}
			;;
		c) 
			number=$OPTARG
			if [[ $number -lt 0 ]]
			then 
				anchor="eom"
				number=$(( -number ))
				echo
			else
				anchor="bom"
			fi
			;;
		*) echo "Invalid option" ;;
	esac
done

# Get selected dates
while [[ $start_date < $end_repeat ]]; do

	month="$(date -d "$start_date" +%B)"

	# Get date of selected day
	if selected_date=$(get_date); then
		echo "$selected_date"
	fi

	start_date=$(date -d "$start_date +1month" +%F)

done
