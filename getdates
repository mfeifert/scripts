#!/usr/bin/env bash

first_day_of_month()
{
	date -d "$1" +"%Y-%m-01"
}

last_day_of_month()
{
	date -d "$(first_day_of_month "$1") +1month -1day" +%F
}

get_date_of_weekday()
{
	local date
	local starting_weekday
	local count=$((number - 1))
	local -A weekdays=([sun]=0 [mon]=1 [tue]=2 [wed]=3 [thu]=4 [fri]=5 [sat]=6)
	local selected_weekday=${weekdays[$day_of_week]}

	# Set values depending upon choosing date relative to beginning or end of month
	if [[ $anchor == "bom" ]]; then

		date=$(first_day_of_month "$start_date")
		starting_weekday=$(date -d "$date" +%w)
		local offset=$(((selected_weekday - starting_weekday + 7) % 7))

	elif [[ $anchor == "eom" ]]; then

		date=$(last_day_of_month "$start_date")
		starting_weekday=$(date -d "$date" +%w)
		local offset=$(((starting_weekday - selected_weekday + 7) % 7))

	fi

	# Shift date to selected weekday
	if [[ $(date -d "$date" +%w) != "${weekdays[$day_of_week]}" ]]; then
		date=$(date -d "$date ${op}${offset}days" +%F)
	fi

	# Shift date the selected number of weeks
	[[ $count -gt 0 ]] && date=$(date -d "$date ${op}${count}weeks" +%F)

	date -d "$date" +"%F %a"
}

get_date_of_day_of_month()
{
	local date
	local count=$((number - 1))

	# Set values depending upon choosing date relative to beginning or end of month
	if [[ $anchor == "bom" ]]; then
		date=$(first_day_of_month "$start_date")
		local op="+"
	elif [[ $anchor == "eom" ]]; then
		date=$(last_day_of_month "$start_date")
		local op="-"
	fi

	# Check if the current month has the selected day
	date=$(date -d "$date ${op}${count}days" +"%F %a")
	if [[ $(date -d "$date" +%B) != $(date -d "$start_date" +%B) ]]; then
		return 1
	fi

	echo "$date"
}

monthly_mode()
{
	while [[ $start_date < $end_repeat ]]; do

		if [[ $repeat_type == "d" ]]; then
			if selected_date=$(get_date_of_day_of_month); then
				echo "$selected_date"
			fi

		elif [[ $repeat_type == "k" ]]; then

			selected_date=$(get_date_of_weekday)

			# Check if there are 5 of the selected weekday in the current month
			if [[ $number -gt 4 ]] && [[ $(date -d "$selected_date" +%B) != $(date -d "$start_date" +%B) ]]; then
				false
			else
				echo "$selected_date"
			fi

		fi

		start_date=$(date -d "$start_date +${increment:-1}month" +%F)

	done
}

reference_date_mode()
{
	true
}

# Command line options
while getopts ":mrdws:e:i:k:c:" opt; do
	case $opt in
		m) mode="monthly" ;;
		r) mode="reference_date" ;;
		s) start_date=$(date -d "$OPTARG" +%F) ;;
		e) end_repeat=$(date -d "$OPTARG" +%F) ;;
		i) increment=$OPTARG ;;
		d) repeat_type="d" ;;
		w) repeat_type="w" ;;
		k)
			repeat_type="k"
			day_of_week=${OPTARG,,}
			day_of_week=${day_of_week:0:3}
			;;
		c)
			number=$OPTARG
			if [[ $number -lt 0 ]]; then
				anchor="eom"
				op="-"
				number=$((-number))
			else
				anchor="bom"
				op="+"
			fi
			;;
		*) echo "Invalid option" ;;
	esac
done

if [[ $mode == "monthly" ]]; then
	monthly_mode
elif [[ $mode == "reference_date" ]]; then
	reference_date_mode
fi
